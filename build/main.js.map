{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.6.3\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport type * as utils from '@iobroker/adapter-core';\nimport { Adapter } from '@iobroker/adapter-core';\nimport { ApiManager } from './lib/apiManager';\nimport { TokenManager } from './lib/tokenManager';\nimport { createChannel, createDevice, createState } from \"./lib/utils\";\n//import { writeLog } from './lib/filelogger';\n//const fileHandle = { path: '/home/raschy/ioBroker.pajdr', file: 'logs1.txt' };\n\n// Load your modules here, e.g.:\n\nclass Pajdr extends Adapter {\n\tprivate tokenManager!: TokenManager;\n\tprivate apiManager!: ApiManager;\n\n\tconstructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'pajdr',\n\t\t});\n\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\tthis.on('stateChange', this.onStateChange.bind(this));\n\t\t// this.on('objectChange', this.onObjectChange.bind(this));\n\t\t// this.on('message', this.onMessage.bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t}\n\tprivate dataUpdateInterval: NodeJS.Timeout | undefined;\n\tprivate customerId: string | undefined;\n\t//\n\t/**\n\t * This method is called when the adapter starts.\n\t * It initializes the token manager and API manager, retrieves the access token,\n\t * and sets up the initial state of the adapter.\n\t */\n\tasync onReady(): Promise<void> {\n\t\tthis.log.info('Adapter is ready');\n\n\t\tif (!this.config.email || !this.config.password) {\n\t\t\tthis.log.error('Email or password not set in configuration');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tokenManager = new TokenManager(this, this.config.email, this.config.password);\n\t\tthis.apiManager = new ApiManager(this, this.tokenManager);\n\n\t\ttry {\n\t\t\tawait this.tokenManager.getAccessToken();\n\t\t\t//\n\t\t\tthis.customerId = await this.tokenManager.getCustomerId();\n\t\t\tif (this.customerId === undefined) {\n\t\t\t\tthis.log.error('Customer ID could not be retrieved');\n\t\t\t} else {\n\t\t\t\tthis.log.debug(`Got access token successfully`);\n\t\t\t\tthis.log.info(`customerId: ${this.customerId}`);\n\t\t\t\tawait this.createCustomerFolder(this.customerId);\n\t\t\t\t//\n\t\t\t\t/*\n\t\t\t\tconst devId = await createDevice(this, \"Mein Ger\u00E4t\", { de: \"Mein Ger\u00E4t\", en: \"My Device\", nl: \"Mijn Apparaat\" });\n\t\t\t\tconst chId = await createChannel(this, devId, \"Sensoren\", { de: \"Sensoren\", en: \"Sensors\", nl: \"SenSoren\" });\n\t\t\t\tawait createWritableState(this, chId, \"Temperatur\", 23.4, {\n\t\t\t\t\tname: { de: \"Temperatur\", en: \"Temperature\", nl: \"Temperatuur\" },\n\t\t\t\t\trole: \"value.temperature\",\n\t\t\t\t\tunit: \"\u00B0C\"\n\t\t\t\t});\n\t\t\t\tawait createState(this, chId, \"Me\u00DFwert\", 55.8, {\n\t\t\t\t\tname: { de: \"Messwert\", en: \"Measured Value\", nl: \"Gemeten Waarde\" },\n\t\t\t\t\trole: \"value.temperature\",\n\t\t\t\t\tunit: \"\u00B0C\"\n\t\t\t\t});\n\t\t\t\tawait createState(this, chId, \"temps\", 11.8, { role: \"value.temperature\", unit: \"\u00B0C\" });\n\n\t\t\t\t//\n\t\t\t\tawait createStructuredState(this, \"heizung1\", \"temperatur\", 21.5, {\n\t\t\t\t\tdeviceName: {\n\t\t\t\t\t\ten: \"Living Room\",\n\t\t\t\t\t\tde: \"Wohnzimmer\"\n\t\t\t\t\t},\n\t\t\t\t\tchannelId: \"istwerte\",\n\t\t\t\t\tchannelName: {\n\t\t\t\t\t\ten: \"Actual Values\",\n\t\t\t\t\t\tde: \"Ist-Werte\"\n\t\t\t\t\t},\n\t\t\t\t\tstateName: {\n\t\t\t\t\t\ten: \"Temperature\",\n\t\t\t\t\t\tde: \"Temperatur\"\n\t\t\t\t\t},\n\t\t\t\t\trole: \"value.temperature\",\n\t\t\t\t\tunit: \"\u00B0C\"\n\t\t\t\t});\n\t\t\t\tawait createStructuredState(this, 'heizung2', 'tempState', 23.2, {\n\t\t\t\t\tdeviceName: 'Wohnzimmer',\n\t\t\t\t\tchannelId: 'istwerte',\n\t\t\t\t\tchannelName: 'Ist-Werte',\n\t\t\t\t\tstateName: 'Temperatur',\n\t\t\t\t\trole: 'value.temperature',\n\t\t\t\t\tunit: '\u00B0C'\n\t\t\t\t});\n\t\t\t\tawait createStructuredState(this, 'heizung3', 'tempStaTe', 23.3, {\n\t\t\t\t\tdeviceName: 'K\u00FCche',\n\t\t\t\t\tstateName: 'TemperaTur',\n\t\t\t\t\trole: 'value.temperature',\n\t\t\t\t\tunit: '\u00B0C'\n\t\t\t\t});\n\t\t\t\t*/\n\t\t\t\t//\n\t\t\t\tawait this.setupStart();\n\t\t\t}\n\t\t} catch (err: any) {\n\t\t\tthis.log.error(`Authentication failed: ${err.message}`);\n\t\t}\n\t\tthis.log.info('Adapter is initialized.');\n\t}\n\n\tprivate async onStateChange(id: string, state: ioBroker.State | null | undefined): Promise<void> {\n\t\tif (state) {\n\t\t\t// The state was changed\n\t\t\tthis.log.silly(`state ${id} changed: ${state.val} (ack = ${state.ack})`);\n\t\t\t//\n\t\t\t// API-Anfrage f\u00FCr Customer\n\t\t\tthis.log.info('################################');\n\t\t\tawait this.queryData();\n\t\t\t//\n\t\t\t// Hier k\u00F6nnen Sie weitere API-Aufrufe oder Logik hinzuf\u00FCgen, die auf den Status\u00E4nderungen basieren.\n\t\t\t// The state was deleted\n\t\t\t// this.log.info(`state ${id} deleted`);\n\t\t}\n\t}\n\n\tprivate async queryData(): Promise<void> {\n\t\t// This method is called when data should be requested\n\t\tthis.log.debug('(queryData#)');\n\t\t// API-Anfrage f\u00FCr Customer\n\t\tthis.apiManager\n\t\t\t.getCustomer()\n\t\t\t.then(customerId => {\n\t\t\t\tthis.log.info(`Queried Customer ID: ${customerId}`);\n\t\t\t\t// You can also set the state with the queried data\n\t\t\t\t//this.setState('customer.customerId', { val: customerId, ack: true });\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.log.error(`Error querying customer data: ${error.message}`);\n\t\t\t});\n\t\t// API-Anfrage f\u00FCr Device\n\t\tthis.queryGetDevice();\n\t\tthis.queryGetCarDeviceData();\n\t}\n\n\tprivate queryGetDevice(): void {\n\t\t// This method is called when data should be requested\n\t\tthis.log.debug('(queryGetDevice#)');\n\t\t// API-Request f\u00FCr CarDeviceData\n\t\tthis.apiManager\n\t\t\t.getDevice()\n\t\t\t.then(async DeviceData => {\n\t\t\t\t// and here you can process the car data\n\t\t\t\tconst manualLink = this.getLinkForManualLang(DeviceData[0].device_models?.[0]?.manual_link);\n\t\t\t\t// Create a device for each DeviceData\n\t\t\t\tfor (const dev of DeviceData) {\n\t\t\t\t\tthis.log.debug(`Device ID: ${dev.id}, Name: ${dev.name}`);\n\t\t\t\t\t// Create a channel for each car\n\t\t\t\t\tif (this.customerId !== undefined) {\n\t\t\t\t\t\tcreateChannel(this, this.customerId, String(dev.id), {\n\t\t\t\t\t\t\ten: 'Tracker Number',\n\t\t\t\t\t\t\tde: 'Tracker Nummer',\n\t\t\t\t\t\t\tru: '\u0422\u0440\u0435\u043A\u0435\u0440 \u043D\u043E\u043C\u0435\u0440',\n\t\t\t\t\t\t\tpt: 'N\u00FAmero do Rastreador',\n\t\t\t\t\t\t\tnl: 'Trackernummer',\n\t\t\t\t\t\t\tfr: 'Num\u00E9ro de suivi',\n\t\t\t\t\t\t\tit: 'Numero di Tracker',\n\t\t\t\t\t\t\tes: 'N\u00FAmero de rastreador',\n\t\t\t\t\t\t\tpl: 'Numer nadajnika',\n\t\t\t\t\t\t\tuk: '\u041D\u043E\u043C\u0435\u0440 \u0442\u0440\u0435\u043A\u0435\u0440\u0430',\n\t\t\t\t\t\t\t'zh-cn': '\u8DDF\u8E2A\u5668\u7F16\u53F7'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcreateState(this, this.customerId + '.' + String(dev.id), 'IMEI', dev.imei, {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ten: 'Device IMEI',\n\t\t\t\t\t\t\t\tde: 'Ger\u00E4te IMEI',\n\t\t\t\t\t\t\t\tnl: 'Apparaat IMEI',\n\t\t\t\t\t\t\t\tru: 'IMEI \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430',\n\t\t\t\t\t\t\t\tpt: 'IMEI do Dispositivo',\n\t\t\t\t\t\t\t\tit: 'IMEI del Dispositivo',\n\t\t\t\t\t\t\t\tfr: 'IMEI de l\\'Appareil',\n\t\t\t\t\t\t\t\tes: 'IMEI del Dispositivo',\n\t\t\t\t\t\t\t\tpl: 'IMEI Urz\u0105dzenia',\n\t\t\t\t\t\t\t\tuk: 'IMEI \u041F\u0440\u0438\u0441\u0442\u0440\u043E\u044E',\n\t\t\t\t\t\t\t\t'zh-cn': '\u8BBE\u5907IMEI',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcreateState(this, this.customerId + '.' + String(dev.id), 'Car Device ID', dev.carDevice_id, {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ten: 'Car Device ID',\n\t\t\t\t\t\t\t\tde: 'Fahrzeug ID',\n\t\t\t\t\t\t\t\tnl: 'Auto ID',\n\t\t\t\t\t\t\t\tru: 'ID \u0430\u0432\u0442\u043E\u043C\u043E\u0431\u0438\u043B\u044F',\n\t\t\t\t\t\t\t\tpt: 'ID do Dispositivo',\n\t\t\t\t\t\t\t\tit: 'ID del Dispositivo',\n\t\t\t\t\t\t\t\tfr: 'ID de l\\'Appareil',\n\t\t\t\t\t\t\t\tes: 'ID del Dispositivo',\n\t\t\t\t\t\t\t\tpl: 'ID Urz\u0105dzenia',\n\t\t\t\t\t\t\t\tuk: 'ID \u041F\u0440\u0438\u0441\u0442\u0440\u043E\u044E',\n\t\t\t\t\t\t\t\t'zh-cn': '\u8BBE\u5907ID',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.log.warn('customerId is undefined, cannot create structured state for device');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.log.error(`Error querying device data: ${error.message}`);\n\t\t\t});\n\t}\n\n\tprivate queryGetCarDeviceData(): void {\n\t\t// This method is called when data should be requested\n\t\tthis.log.debug('(queryGetCarDeviceData#)');\n\t\t// API-Request f\u00FCr CarDeviceData\n\t\tthis.apiManager\n\t\t\t.getCarDeviceData()\n\t\t\t.then(async carData => {\n\t\t\t\t// and here you can process the car data\n\t\t\t\tfor (const car of carData) {\n\t\t\t\t\t//#console.log(`car: ${JSON.stringify(car)}`);\n\t\t\t\t\tthis.log.debug(`Car ID: ${car.id}, Name: ${car.car_name}`);\n\t\t\t\t\t// Create a folder for each car\n\t\t\t\t\tif (this.customerId !== undefined) {\n\t\t\t\t\t\tcreateChannel(this, this.customerId, String(car.id), {\n\t\t\t\t\t\t\ten: 'Vehicle ID',\n\t\t\t\t\t\t\tde: 'Fahrzeug ID',\n\t\t\t\t\t\t\tru: 'ID \u0442\u0440\u0430\u043D\u0441\u043F\u043E\u0440\u0442\u043D\u043E\u0433\u043E \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430',\n\t\t\t\t\t\t\tpt: 'Identifica\u00E7\u00E3o do ve\u00EDculo',\n\t\t\t\t\t\t\tit: 'ID veicolo',\n\t\t\t\t\t\t\tfr: 'Identification du v\u00E9hicule',\n\t\t\t\t\t\t\tes: 'Identificaci\u00F3n de veh\u00EDculos',\n  \t\t\t\t\t\t\tpl: 'Identyfikator pojazdu',\n  \t\t\t\t\t\t\tuk: '\u041A\u043E\u0434 \u0430\u0432\u0442\u043E\u043C\u043E\u0431\u0456\u043B\u044F',\n  \t\t\t\t\t\t\t'zh-cn': '\u8F66\u8F86\u7F16\u53F7'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcreateState(this, this.customerId + '.' + String(car.id), 'Vehicle Manufacturer', car.car_name, {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ten: 'Vehicle Manufacturer',\n  \t\t\t\t\t\t\t\tde: 'Hersteller des Fahrzeugs',\n  \t\t\t\t\t\t\t\tru: '\u041F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0438\u0442\u0435\u043B\u044C \u0442\u0440\u0430\u043D\u0441\u043F\u043E\u0440\u0442\u043D\u043E\u0433\u043E \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430',\n  \t\t\t\t\t\t\t\tpt: 'Fabricante do ve\u00EDculo',\n  \t\t\t\t\t\t\t\tnl: 'Fabrikant van het voertuig',\n  \t\t\t\t\t\t\t\tfr: 'Fabricant du v\u00E9hicule',\n  \t\t\t\t\t\t\t\tit: 'Nome dell\\'automobile',\n  \t\t\t\t\t\t\t\tes: 'Nombre del coche',\n  \t\t\t\t\t\t\t\tpl: 'Nazwa samochodu',\n  \t\t\t\t\t\t\t\tuk: '\u041D\u0430\u0437\u0432\u0430 \u0430\u0432\u0442\u043E\u043C\u043E\u0431\u0456\u043B\u044F',\n  \t\t\t\t\t\t\t\t'zh-cn': '\u8F66\u540D'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcreateState(this, this.customerId + '.' + String(car.id), 'License Plate', car.license_plate, {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ten: 'License Plate',\n  \t\t\t\t\t\t\t\tde: 'Kennzeichen',\n  \t\t\t\t\t\t\t\tru: '\u041D\u043E\u043C\u0435\u0440\u043D\u043E\u0439 \u0437\u043D\u0430\u043A',\n  \t\t\t\t\t\t\t\tpt: 'Placa do ve\u00EDculo',\n  \t\t\t\t\t\t\t\tnl: 'Kenteken',\n  \t\t\t\t\t\t\t\tfr: 'Plaque d\\'immatriculation',\n  \t\t\t\t\t\t\t\tit: 'Targa',\n  \t\t\t\t\t\t\t\tes: 'Matr\u00EDcula',\n  \t\t\t\t\t\t\t\tpl: 'Numer rejestracyjny',\n  \t\t\t\t\t\t\t\tuk: '\u041D\u043E\u043C\u0435\u0440\u043D\u0438\u0439 \u0437\u043D\u0430\u043A',\n  \t\t\t\t\t\t\t\t'zh-cn': '\u8F66\u724C'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n  \t\t\t\t\t\tcreateState(this, this.customerId + '.' + String(car.id), 'Mileage', car.optimized_mileage, {\n  \t\t\t\t\t\t\tname: {\n  \t\t\t\t\t\t\t\ten: 'Mileage',\n  \t\t\t\t\t\t\t\tde: 'Kilometerstand',\n  \t\t\t\t\t\t\t\tru: '\u041F\u0440\u043E\u0431\u0435\u0433',\n  \t\t\t\t\t\t\t\tpt: 'Quilometragem',\n  \t\t\t\t\t\t\t\tnl: 'Kilometerstand',\n  \t\t\t\t\t\t\t\tfr: 'Kilom\u00E9trage',\n  \t\t\t\t\t\t\t\tit: 'Chilometraggio',\n  \t\t\t\t\t\t\t\tes: 'Kilometraje',\n  \t\t\t\t\t\t\t\tpl: 'Przebieg',\n  \t\t\t\t\t\t\t\tuk: '\u041F\u0440\u043E\u0431\u0456\u0433',\n  \t\t\t\t\t\t\t\t'zh-cn': '\u91CC\u7A0B'\n  \t\t\t\t\t\t\t}\n  \t\t\t\t\t\t});\n  \t\t\t\t\t\tcreateState(this, this.customerId + '.' + String(car.id), 'Created at', car.created_at, {\n  \t\t\t\t\t\t\tname: {\n  \t\t\t\t\t\t\t\ten: 'Created At',\n  \t\t\t\t\t\t\t\tde: 'Erstellt am',\n  \t\t\t\t\t\t\t\tru: '\u0421\u043E\u0437\u0434\u0430\u043D\u043E',\n  \t\t\t\t\t\t\t\tpt: 'Criado em',\n  \t\t\t\t\t\t\t\tnl: 'Aangemaakt op',\n  \t\t\t\t\t\t\t\tfr: 'Cr\u00E9\u00E9 le',\n  \t\t\t\t\t\t\t\tit: 'Creato il',\n  \t\t\t\t\t\t\t\tes: 'Creado el',\n  \t\t\t\t\t\t\t\tpl: 'Utworzono',\n  \t\t\t\t\t\t\t\tuk: '\u0421\u0442\u0432\u043E\u0440\u0435\u043D\u043E',\n  \t\t\t\t\t\t\t\t'zh-cn': '\u521B\u5EFA\u4E8E'\n  \t\t\t\t\t\t\t}\n  \t\t\t\t\t\t});\n  \t\t\t\t\t} else {\n  \t\t\t\t\t\tthis.log.warn('customerId is undefined, cannot create structured state for car');\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t})\n  \t\t\t.catch(error => {\n  \t\t\t\tthis.log.error(`Error querying car device data: ${error.message}`);\n  \t\t\t});\n\t}\n\n\n\t//\t#### Helper ####\n\t//\n\n\tremoveInvalidCharacters(inputString: string): string {\n\t\tconst regexPattern = '[^a-zA-Z0-9]+';\n\t\tconst regex = new RegExp(regexPattern, 'gu');\n\t\treturn inputString.replace(regex, '_');\n\t}\n\n\tprivate async createCustomerFolder(customerId: string | undefined): Promise<void> {\n\t\tif (typeof customerId !== 'string' || customerId.trim() === '' || customerId === 'undefined' || customerId === 'null' ) {\n\t\t\tthis.log.warn('[createCustomerFolder] Invalid customerId');\n\t\t\treturn;\n\t\t}\n\n\t\tconst createdDevice = await createDevice(this, customerId, { \n\t\t\ten: 'Customer ID',\n\t\t\tde: 'Kunden-ID',\n\t\t\tru: '\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043A\u043B\u0438\u0435\u043D\u0442\u0430',\n\t\t\tpt: 'ID do cliente',\n\t\t\tnl: 'Klant-ID',\n\t\t\tfr: 'ID client',\n\t\t\tit: 'ID cliente',\n\t\t\tes: 'ID del cliente',\n\t\t\tpl: 'ID klienta',\n\t\t\tuk: '\u0406\u0434\u0435\u043D\u0442\u0438\u0444\u0456\u043A\u0430\u0442\u043E\u0440 \u043A\u043B\u0456\u0454\u043D\u0442\u0430',\n\t\t\t'zh-cn': '\u5BA2\u6237ID', \n\t\t});\n\t\tthis.log.debug(`[createCustomerFolder] Customer \"${createdDevice}\"`);\n\n\t}\n\n\tprivate async setupStart(): Promise<void> {\n\t\t// Initialize the token manager\n\t\t//this.tokenManager = new TokenManager(this.adapter, this.email, this.password);\n\t\tawait this.setObjectNotExistsAsync('Start', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'Start',\n\t\t\t\ttype: 'boolean',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: true,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tthis.subscribeStates('Start'); // for requesting data\n\t}\n\n\tprivate async getLinkForManualLang(\n\t\traw: string | Record<string, string> | null | undefined\n\t\t): Promise<void> {\n\n\t\tif (!raw) {\n\t\t\tthis.log.warn('[getLinkForManualLang] No device models in DeviceData found');\n\t\t\treturn;\n\t\t}\n\n\t\tlet parsed: Record<string, string> | undefined;\n\n\t\ttry {\n\t\t\tif (typeof raw === 'string') {\n\t\t\t\tparsed = JSON.parse(raw) as Record<string, string>;\n\t\t\t} else if (typeof raw === 'object') {\n\t\t\t\tparsed = raw;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis.log.warn(`[getLinkForManualLang] JSON parsing failed: ${err}`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!parsed || typeof parsed !== 'object') return;\n\n\t\t// Retrieving the system language at runtime\n\t\tconst systemConfig = await this.getForeignObjectAsync('system.config');\n\t\tlet systemLang: string | undefined;\n\t\tif (systemConfig?.common?.language) {\n\t\t\tsystemLang = systemConfig.common.language;\n\t\t\t//this.log.debug(`System language set to: ${systemLang}`);\n\t\t}\n\n\t\t// Use the system language or default to English\n\t\tconst userLang = systemLang ?? 'en';\n\n\t\t// Link for user language found\n\t\tif (parsed[userLang]) {\n\t\t\tthis.log.debug(`[getLinkForManualLang] User language: ${userLang}`);\n\t\t}else{\n\t\t\t// Fallback to English, if available, otherwise nothing\n\t\t\tparsed[userLang] = parsed['en'] ?? '';\n\t\t\tthis.log.debug(`[getLinkForManualLang] User language: ${userLang} [en]`);\n\t\t}\n\t\t\n\t\tif (this.customerId !== undefined) {\n\t\t\tif (parsed[userLang]) {\n\t\t\t\tcreateState(this, this.customerId, 'manualLink', parsed[userLang], {\n\t\t\t\t\tname: {\n\t\t\t\t\t\ten: 'manualLink',\n\t\t\t\t\t\tde: 'Link zum Handbuch',\n\t\t\t\t\t\tnl: 'Link naar handleiding',\n\t\t\t\t\t\tru: '\u0421\u0441\u044B\u043B\u043A\u0430 \u043D\u0430 \u0440\u0443\u043A\u043E\u0432\u043E\u0434\u0441\u0442\u0432\u043E',\n\t\t\t\t\t\tpt: 'Link para o manual',\n\t\t\t\t\t\tit: 'Link al manuale',\n\t\t\t\t\t\tfr: 'Lien vers le manuel',\n\t\t\t\t\t\tes: 'Link hacia el manual',\n\t\t\t\t\t\tpl: 'Link do podr\u0119cznika',\n\t\t\t\t\t\tuk: '\u041F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u043D\u0430 \u043F\u043E\u0441\u0456\u0431\u043D\u0438\u043A',\n\t\t\t\t\t\t'zh-cn': '\u624B\u518C\u94FE\u63A5',\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.log.warn('[getLinkForManualLang] No link to manual available');\n\t\t\t}\n\t\t} else {\n\t\t\tthis.log.warn('[getLinkForManualLang] customerId is undefined, cannot store manual link');\n\t\t}\n\t}\n\n\tasync storeDataToState(\n\t\tdeviceId: string,\n\t\tstateId: string,\n\t\tvalue: ioBroker.StateValue,\n\t\toptions?: CreateStructuredStateOptions_old\n\t\t): Promise<void> {\n\t\tconst {\n\t\t\tdeviceName,\n\t\t\tchannelId,\n\t\t\tchannelName,\n\t\t\tstateName,\n\t\t\trole = \"state\",\n\t\t\ttype = typeof value as ioBroker.CommonType,\n\t\t\tunit\n\t\t} = options ?? {};\n\n\t\tconst devicePath = deviceId;\n\t\tconst channelPath = channelId ? `${devicePath}.${channelId}` : undefined;\n\t\tconst statePath = channelPath ? `${channelPath}.${stateId}` : `${devicePath}.${stateId}`;\n\n\t\t// 1. Device anlegen\n\t\tawait this.setObjectNotExistsAsync(devicePath, {\n\t\t\ttype: \"device\",\n\t\t\tcommon: {\n\t\t\t\tname: ensureTranslatedName(deviceName ?? deviceId, deviceId)\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\t// 2. Channel anlegen (optional)\n\t\tif (channelPath) {\n\t\t\tawait this.setObjectNotExistsAsync(channelPath, {\n\t\t\t\ttype: \"channel\",\n\t\t\t\tcommon: {\n\t\t\t\t\tname: ensureTranslatedName(channelName ?? channelId!, channelId!)\n\t\t\t\t},\n\t\t\t\tnative: {}\n\t\t\t});\n\t\t}\n\n\t\t// 3. State anlegen\n\t\tawait this.setObjectNotExistsAsync(statePath, {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: ensureTranslatedName(stateName ?? stateId, stateId),\n\t\t\t\trole,\n\t\t\t\ttype,\n\t\t\t\tunit,\n\t\t\t\tread: true,\n\t\t\t\twrite: false\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\t// 4. Wert schreiben\n\t\tawait this.setState(statePath, { val: value, ack: true });\n\t\t\n\t\tfunction ensureTranslatedName(\n\t\t\tname: string | Record<string, string>,\n\t\t\tfallback: string\n\t\t\t): string | { en: string; [key: string]: string } {\n\t\n\t\t\tif (typeof name === \"string\") {\n\t\t\t\treturn name;\n\t\t\t}\n\n\t\t\t// Absicherung: wenn 'en' fehlt, fallback einf\u00FCgen\n\t\t\tif (typeof name.en !== \"string\") {\n\t\t\t\treturn { en: fallback, ...name };\n\t\t\t}\n\n\t\t\t// explizit typisieren, damit TS zufrieden ist\n\t\t\treturn name as { en: string; [key: string]: string };\n\t\t}\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t *\n\t * @param callback Callback\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\tif (this.dataUpdateInterval) {\n\t\t\t\tclearTimeout(this.dataUpdateInterval);\n\t\t\t}\n\t\t\t// ...\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tthis.log.debug(`[onUnload] ${JSON.stringify(e)}`);\n\t\t\tcallback();\n\t\t}\n\t}\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Pajdr(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Pajdr())();\n}\n"],
  "mappings": "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",
  "names": []
}
