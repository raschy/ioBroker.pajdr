{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.6.3\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport type * as utils from '@iobroker/adapter-core';\nimport { Adapter } from '@iobroker/adapter-core';\nimport { ApiManager } from './lib/apiManager';\nimport { TokenManager } from './lib/tokenManager';\nimport { createChannel, createDevice, createState } from './lib/utils';\n//import { writeLog } from './lib/filelogger';\n//const fileHandle = { path: '/home/raschy/ioBroker.pajdr', file: 'logs1.txt' };\n\n// Load your modules here, e.g.:\n\nclass Pajdr extends Adapter {\n\tprivate tokenManager!: TokenManager;\n\tprivate apiManager!: ApiManager;\n\n\tconstructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'pajdr',\n\t\t});\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\tthis.on('stateChange', this.onStateChange.bind(this));\n\t\t// this.on('objectChange', this.onObjectChange.bind(this));\n\t\t// this.on('message', this.onMessage.bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t}\n\tprivate dataUpdateInterval: NodeJS.Timeout | undefined;\n\tprivate customerId: string | undefined;\n\tprivate deviceId: string | undefined;\n\t//\n\t/**\n\t * This method is called when the adapter starts.\n\t * It initializes the token manager and API manager, retrieves the access token,\n\t * and sets up the initial state of the adapter.\n\t */\n\tasync onReady(): Promise<void> {\n\t\tthis.log.info('Adapter is ready');\n\t\tthis.log.info(`#####  SERVER <-###-> TEST ${new Date().toISOString()}`);\n\t\tconsole.log('Adapter startet ...');\n\n\t\tif (!this.config.email || !this.config.password) {\n\t\t\tthis.log.error('Email or password not set in configuration');\n\t\t\treturn;\n\t\t}\n\t\tthis.tokenManager = new TokenManager(this, this.config.email, this.config.password);\n\t\tthis.apiManager = new ApiManager(this, this.tokenManager);\n\n\t\ttry {\n\t\t\tawait this.tokenManager.getAccessToken();\n\t\t\t//\n\t\t\tthis.customerId = await this.tokenManager.getCustomerId();\n\t\t\tif (this.customerId === undefined) {\n\t\t\t\tthis.log.error('Customer ID could not be retrieved');\n\t\t\t} else {\n\t\t\t\tthis.log.debug(`Got access token successfully`);\n\t\t\t\tthis.log.info(`customerId: ${this.customerId}`);\n\t\t\t\tawait this.createCustomerFolder(this.customerId);\n\t\t\t\t//\n\t\t\t\t//\n\t\t\t\tawait this.setupStart();\n\t\t\t}\n\t\t} catch (err: any) {\n\t\t\tthis.log.error(`Authentication failed: ${err.message}`);\n\t\t}\n\t\tthis.log.info('Adapter is initialized.');\n\t}\n\n\tprivate async onStateChange(id: string, state: ioBroker.State | null | undefined): Promise<void> {\n\t\tif (state) {\n\t\t\t// The state was changed\n\t\t\tthis.log.silly(`state ${id} changed: ${state.val} (ack = ${state.ack})`);\n\t\t\t//\n\t\t\t// API-Anfrage f\u00FCr Customer\n\t\t\tconsole.log('############   API   ############');\n\t\t\tthis.queryData();\n\t\t\t//\n\t\t\t// Hier k\u00F6nnen Sie weitere API-Aufrufe oder Logik hinzuf\u00FCgen, die auf den Status\u00E4nderungen basieren.\n\t\t\t// The state was deleted\n\t\t\t// this.log.info(`state ${id} deleted`);\n\t\t}\n\t}\n\n\tprivate queryData(): void {\n\t\t// This method is called when data should be requested\n\t\tthis.log.debug('(queryData#)');\n\n\t\t// API-Anfrage f\u00FCr Customer\n\t\tthis.apiManager\n\t\t\t.getCustomer()\n\t\t\t.then(customerId => {\n\t\t\t\tthis.log.info(`Queried Customer ID: ${customerId}`);\n\t\t\t\t// You can also set the state with the queried data\n\t\t\t\t//this.setState('customer.customerId', { val: customerId, ack: true });\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.log.error(`Error querying customer data: ${error.message}`);\n\t\t\t});\n\t\t// API-Anfrage f\u00FCr Device\n\t\tthis.queryGetDevice();\n\t\t//this.deviceId = '1312315';\n\t\tthis.queryGetCarDeviceData();\n\t\t//this.queryAllLastPositions();\n\t}\n\n\tprivate queryGetDevice(): void {\n\t\t// This method is called when data should be requested\n\t\tthis.log.debug('(queryGetDevice#)');\n\t\t// API-Request f\u00FCr CarDeviceData\n\t\tthis.apiManager\n\t\t\t.getDevice()\n\t\t\t.then(async DeviceData => {\n\t\t\t\t// and here you can process the car data\n\t\t\t\t// const manualLink = this.getLinkForManualLang(DeviceData[0].device_models?.[0]?.manual_link);\n\t\t\t\t// Create a device for each DeviceData\n\t\t\t\tfor (const dev of DeviceData) {\n\t\t\t\t\tthis.log.debug(`Device ID: ${dev.id}, Name: ${dev.name}`);\n\t\t\t\t\t// Create a channel for each car\n\t\t\t\t\tif (this.customerId !== undefined) {\n\t\t\t\t\t\tawait createChannel(this, this.customerId, String(dev.id), {\n\t\t\t\t\t\t\ten: 'Tracker Number',\n\t\t\t\t\t\t\tde: 'Tracker Nummer',\n\t\t\t\t\t\t\tru: '\u0422\u0440\u0435\u043A\u0435\u0440 \u043D\u043E\u043C\u0435\u0440',\n\t\t\t\t\t\t\tpt: 'N\u00FAmero do Rastreador',\n\t\t\t\t\t\t\tnl: 'Trackernummer',\n\t\t\t\t\t\t\tfr: 'Num\u00E9ro de suivi',\n\t\t\t\t\t\t\tit: 'Numero di Tracker',\n\t\t\t\t\t\t\tes: 'N\u00FAmero de rastreador',\n\t\t\t\t\t\t\tpl: 'Numer nadajnika',\n\t\t\t\t\t\t\tuk: '\u041D\u043E\u043C\u0435\u0440 \u0442\u0440\u0435\u043A\u0435\u0440\u0430',\n\t\t\t\t\t\t\t'zh-cn': '\u8DDF\u8E2A\u5668\u7F16\u53F7',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait createState(this, `${this.customerId}.${String(dev.id)}`, 'IMEI', dev.imei, {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ten: 'Device IMEI',\n\t\t\t\t\t\t\t\tde: 'Ger\u00E4te IMEI',\n\t\t\t\t\t\t\t\tnl: 'Apparaat IMEI',\n\t\t\t\t\t\t\t\tru: 'IMEI \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430',\n\t\t\t\t\t\t\t\tpt: 'IMEI do Dispositivo',\n\t\t\t\t\t\t\t\tit: 'IMEI del Dispositivo',\n\t\t\t\t\t\t\t\tfr: '\"IMEI de l\\'Appareil\"',\n\t\t\t\t\t\t\t\tes: 'IMEI del Dispositivo',\n\t\t\t\t\t\t\t\tpl: 'IMEI Urz\u0105dzenia',\n\t\t\t\t\t\t\t\tuk: 'IMEI \u041F\u0440\u0438\u0441\u0442\u0440\u043E\u044E',\n\t\t\t\t\t\t\t\t'zh-cn': '\u8BBE\u5907IMEI',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait createState(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`${this.customerId}.${String(dev.id)}`,\n\t\t\t\t\t\t\t'Car Device ID',\n\t\t\t\t\t\t\tdev.carDevice_id,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\t\ten: 'Car Device ID',\n\t\t\t\t\t\t\t\t\tde: 'Fahrzeug ID',\n\t\t\t\t\t\t\t\t\tnl: 'Auto ID',\n\t\t\t\t\t\t\t\t\tru: 'ID \u0430\u0432\u0442\u043E\u043C\u043E\u0431\u0438\u043B\u044F',\n\t\t\t\t\t\t\t\t\tpt: 'ID do Dispositivo',\n\t\t\t\t\t\t\t\t\tit: 'ID del Dispositivo',\n\t\t\t\t\t\t\t\t\tfr: '\"ID de l\\'Appareil\"',\n\t\t\t\t\t\t\t\t\tes: 'ID del Dispositivo',\n\t\t\t\t\t\t\t\t\tpl: 'ID Urz\u0105dzenia',\n\t\t\t\t\t\t\t\t\tuk: 'ID \u041F\u0440\u0438\u0441\u0442\u0440\u043E\u044E',\n\t\t\t\t\t\t\t\t\t'zh-cn': '\u8BBE\u5907ID',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// //#return dev.id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.log.warn('customerId is undefined, cannot create structured state for device');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.log.error(`Error querying device data: ${error.message}`);\n\t\t\t});\n\t}\n\n\tprivate queryGetCarDeviceData(): void {\n\t\t// This method is called when data should be requested\n\t\tthis.log.debug('(queryGetCarDeviceData#)');\n\t\t// API-Request f\u00FCr CarDeviceData\n\t\tthis.apiManager\n\t\t\t.getCarDeviceData()\n\t\t\t.then(async carData => {\n\t\t\t\t// and here you can process the car data\n\t\t\t\tfor (const car of carData) {\n\t\t\t\t\t//#console.log(`car: ${JSON.stringify(car)}`);\n\t\t\t\t\tthis.log.debug(`Car ID: ${car.id}, Name: ${car.car_name}`);\n\t\t\t\t\t// Create a folder for each car\n\t\t\t\t\tif (this.customerId !== undefined) {\n\t\t\t\t\t\tawait createChannel(this, this.customerId, String(car.id), {\n\t\t\t\t\t\t\ten: 'Vehicle ID',\n\t\t\t\t\t\t\tde: 'Fahrzeug ID',\n\t\t\t\t\t\t\tru: 'ID \u0442\u0440\u0430\u043D\u0441\u043F\u043E\u0440\u0442\u043D\u043E\u0433\u043E \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430',\n\t\t\t\t\t\t\tpt: 'Identifica\u00E7\u00E3o do ve\u00EDculo',\n\t\t\t\t\t\t\tit: 'ID veicolo',\n\t\t\t\t\t\t\tfr: 'Identification du v\u00E9hicule',\n\t\t\t\t\t\t\tes: 'Identificaci\u00F3n de veh\u00EDculos',\n\t\t\t\t\t\t\tpl: 'Identyfikator pojazdu',\n\t\t\t\t\t\t\tuk: '\u041A\u043E\u0434 \u0430\u0432\u0442\u043E\u043C\u043E\u0431\u0456\u043B\u044F',\n\t\t\t\t\t\t\t'zh-cn': '\u8F66\u8F86\u7F16\u53F7',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait createState(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`${this.customerId}.${String(car.id)}`,\n\t\t\t\t\t\t\t'Vehicle Manufacturer',\n\t\t\t\t\t\t\tcar.car_name,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\t\ten: 'Vehicle Manufacturer',\n\t\t\t\t\t\t\t\t\tde: 'Hersteller des Fahrzeugs',\n\t\t\t\t\t\t\t\t\tru: '\u041F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0438\u0442\u0435\u043B\u044C \u0442\u0440\u0430\u043D\u0441\u043F\u043E\u0440\u0442\u043D\u043E\u0433\u043E \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430',\n\t\t\t\t\t\t\t\t\tpt: 'Fabricante do ve\u00EDculo',\n\t\t\t\t\t\t\t\t\tnl: 'Fabrikant van het voertuig',\n\t\t\t\t\t\t\t\t\tfr: 'Fabricant du v\u00E9hicule',\n\t\t\t\t\t\t\t\t\tit: \"Nome dell'automobile\",\n\t\t\t\t\t\t\t\t\tes: 'Nombre del coche',\n\t\t\t\t\t\t\t\t\tpl: 'Nazwa samochodu',\n\t\t\t\t\t\t\t\t\tuk: '\u041D\u0430\u0437\u0432\u0430 \u0430\u0432\u0442\u043E\u043C\u043E\u0431\u0456\u043B\u044F',\n\t\t\t\t\t\t\t\t\t'zh-cn': '\u8F66\u540D',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait createState(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`${this.customerId}.${String(car.id)}`,\n\t\t\t\t\t\t\t'License Plate',\n\t\t\t\t\t\t\tcar.license_plate,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\t\ten: 'License Plate',\n\t\t\t\t\t\t\t\t\tde: 'Kennzeichen',\n\t\t\t\t\t\t\t\t\tru: '\u041D\u043E\u043C\u0435\u0440\u043D\u043E\u0439 \u0437\u043D\u0430\u043A',\n\t\t\t\t\t\t\t\t\tpt: 'Placa do ve\u00EDculo',\n\t\t\t\t\t\t\t\t\tnl: 'Kenteken',\n\t\t\t\t\t\t\t\t\tfr: '\"Plaque d\\'immatriculation\"',\n\t\t\t\t\t\t\t\t\tit: 'Targa',\n\t\t\t\t\t\t\t\t\tes: 'Matr\u00EDcula',\n\t\t\t\t\t\t\t\t\tpl: 'Numer rejestracyjny',\n\t\t\t\t\t\t\t\t\tuk: '\u041D\u043E\u043C\u0435\u0440\u043D\u0438\u0439 \u0437\u043D\u0430\u043A',\n\t\t\t\t\t\t\t\t\t'zh-cn': '\u8F66\u724C',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait createState(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`${this.customerId}.${String(car.id)}`,\n\t\t\t\t\t\t\t'Mileage',\n\t\t\t\t\t\t\tcar.optimized_mileage,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\t\ten: 'Mileage',\n\t\t\t\t\t\t\t\t\tde: 'Kilometerstand',\n\t\t\t\t\t\t\t\t\tru: '\u041F\u0440\u043E\u0431\u0435\u0433',\n\t\t\t\t\t\t\t\t\tpt: 'Quilometragem',\n\t\t\t\t\t\t\t\t\tnl: 'Kilometerstand',\n\t\t\t\t\t\t\t\t\tfr: 'Kilom\u00E9trage',\n\t\t\t\t\t\t\t\t\tit: 'Chilometraggio',\n\t\t\t\t\t\t\t\t\tes: 'Kilometraje',\n\t\t\t\t\t\t\t\t\tpl: 'Przebieg',\n\t\t\t\t\t\t\t\t\tuk: '\u041F\u0440\u043E\u0431\u0456\u0433',\n\t\t\t\t\t\t\t\t\t'zh-cn': '\u91CC\u7A0B',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait createState(this, `${this.customerId}.${String(car.id)}`, 'Created at', car.created_at, {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ten: 'Created At',\n\t\t\t\t\t\t\t\tde: 'Erstellt am',\n\t\t\t\t\t\t\t\tru: '\u0421\u043E\u0437\u0434\u0430\u043D\u043E',\n\t\t\t\t\t\t\t\tpt: 'Criado em',\n\t\t\t\t\t\t\t\tnl: 'Aangemaakt op',\n\t\t\t\t\t\t\t\tfr: 'Cr\u00E9\u00E9 le',\n\t\t\t\t\t\t\t\tit: 'Creato il',\n\t\t\t\t\t\t\t\tes: 'Creado el',\n\t\t\t\t\t\t\t\tpl: 'Utworzono',\n\t\t\t\t\t\t\t\tuk: '\u0421\u0442\u0432\u043E\u0440\u0435\u043D\u043E',\n\t\t\t\t\t\t\t\t'zh-cn': '\u521B\u5EFA\u4E8E',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.log.warn('customerId is undefined, cannot create structured state for car');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.log.error(`Error querying car device data: ${error.message}`);\n\t\t\t});\n\t}\n\n\tprivate queryAllLastPositions(): void {\n\t\t// This method is called when data should be requested\n\t\tthis.log.debug('(queryAllLastPositions#)');\n\t\tthis.log.debug(`Calling getAllLastPositions from ApiManager with dummy device ID [${this.deviceId}]`);\n\t\t// API-Request f\u00FCr CarDeviceData\n\t\tthis.apiManager\n\t\t\t.getAllLastPositions([1312315])\n\t\t\t.then(async positions => {\n\t\t\t\t// and here you can process the car data\n\t\t\t\tfor (const position of positions) {\n\t\t\t\t\t//#console.log(`car: ${JSON.stringify(car)}`);\n\t\t\t\t\tthis.log.debug(`Position ID: \n\t\t\t\t\t\t${position.id}, Latitude: ${Math.round(position.lat * 10000) / 10000}, Longitude: ${Math.round(position.lng * 10000) / 10000}`);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.log.error(`Error querying car device data: ${error.message}`);\n\t\t\t});\n\t}\n\n\t/**\n\t * Retrieves the last known positions for all devices.\n\t */\n\tprivate _queryAllLastPositions(): void {\n\t\tthis.log.debug('(queryAllLastPositions#)');\n\t\t// Example: Call an API method to get all last positions, then process them\n\t\tthis.log.debug(`Calling getAllLastPositions from ApiManager with dummy device ID [${this.deviceId}]`);\n\t\tif (typeof this.apiManager.getAllLastPositions === 'function') {\n\t\t\tthis.apiManager\n\t\t\t\t.getAllLastPositions([1312315])\n\t\t\t\t.then((positions: any) => {\n\t\t\t\t\tthis.log.info(`Retrieved last positions: ${JSON.stringify(positions)}`);\n\t\t\t\t\t// Process positions as needed\n\t\t\t\t})\n\t\t\t\t.catch((error: any) => {\n\t\t\t\t\tthis.log.error(`Error retrieving last positions: ${error.message}`);\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.log.warn('queryAllLastPositions API method is not implemented.');\n\t\t}\n\t}\n\n\t//\t#### Helper ####\n\t//\n\n\tremoveInvalidCharacters(inputString: string): string {\n\t\tconst regexPattern = '[^a-zA-Z0-9]+';\n\t\tconst regex = new RegExp(regexPattern, 'gu');\n\t\treturn inputString.replace(regex, '_');\n\t}\n\n\tprivate async createCustomerFolder(customerId: string | undefined): Promise<void> {\n\t\tif (\n\t\t\ttypeof customerId !== 'string' ||\n\t\t\tcustomerId.trim() === '' ||\n\t\t\tcustomerId === 'undefined' ||\n\t\t\tcustomerId === 'null'\n\t\t) {\n\t\t\tthis.log.warn('[createCustomerFolder] Invalid customerId');\n\t\t\treturn;\n\t\t}\n\n\t\tconst createdDevice = await createDevice(this, customerId, {\n\t\t\ten: 'Customer ID',\n\t\t\tde: 'Kunden-ID',\n\t\t\tru: '\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043A\u043B\u0438\u0435\u043D\u0442\u0430',\n\t\t\tpt: 'ID do cliente',\n\t\t\tnl: 'Klant-ID',\n\t\t\tfr: 'ID client',\n\t\t\tit: 'ID cliente',\n\t\t\tes: 'ID del cliente',\n\t\t\tpl: 'ID klienta',\n\t\t\tuk: '\u0406\u0434\u0435\u043D\u0442\u0438\u0444\u0456\u043A\u0430\u0442\u043E\u0440 \u043A\u043B\u0456\u0454\u043D\u0442\u0430',\n\t\t\t'zh-cn': '\u5BA2\u6237ID',\n\t\t});\n\t\tthis.log.debug(`[createCustomerFolder] Customer \"${createdDevice}\"`);\n\t}\n\n\tprivate async setupStart(): Promise<void> {\n\t\t// Initialize the token manager\n\t\t//this.tokenManager = new TokenManager(this.adapter, this.email, this.password);\n\t\tawait this.setObjectNotExistsAsync('Start', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'Start',\n\t\t\t\ttype: 'boolean',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: true,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tthis.subscribeStates('Start'); // for requesting data\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t *\n\t * @param callback Callback\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\tif (this.dataUpdateInterval) {\n\t\t\t\tclearTimeout(this.dataUpdateInterval);\n\t\t\t}\n\t\t\t// ...\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tthis.log.debug(`[onUnload] ${JSON.stringify(e)}`);\n\t\t\tcallback();\n\t\t}\n\t}\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Pajdr(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Pajdr())();\n}\n"],
  "mappings": "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",
  "names": []
}
